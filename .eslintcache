[{"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\index.tsx":"1","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\reportWebVitals.ts":"2","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\App.tsx":"3","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\Auth\\Auth.tsx":"4","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\Favorites.tsx":"5","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\Navbar\\Navbar.tsx":"6","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\Logout\\Logout.tsx":"7","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\RoutineMap.tsx":"8","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\RoutineIndex.tsx":"9","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\RoutineEdit.tsx":"10","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\CreateRoutine.tsx":"11","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\Routines.tsx":"12"},{"size":584,"mtime":1611088579870,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2643,"mtime":1611709413555,"results":"16","hashOfConfig":"14"},{"size":5956,"mtime":1611714850918,"results":"17","hashOfConfig":"14"},{"size":3603,"mtime":1611632192168,"results":"18","hashOfConfig":"14"},{"size":985,"mtime":1611273738517,"results":"19","hashOfConfig":"14"},{"size":748,"mtime":1611619965581,"results":"20","hashOfConfig":"14"},{"size":1225,"mtime":1611536954612,"results":"21","hashOfConfig":"14"},{"size":5005,"mtime":1611702137867,"results":"22","hashOfConfig":"14"},{"size":5070,"mtime":1611184061778,"results":"23","hashOfConfig":"14"},{"size":4981,"mtime":1611702738938,"results":"24","hashOfConfig":"14"},{"size":2217,"mtime":1611706554447,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1lhdj3z",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\index.tsx",[],["52","53"],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\reportWebVitals.ts",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\App.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\Auth\\Auth.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\Favorites.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\Logout\\Logout.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\RoutineMap.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\RoutineIndex.tsx",["54"],"import {Component } from 'react'; \r\nimport {Card, CardBody, Button, Modal, Container, Row } from 'reactstrap'; \r\nimport RoutineEdit from '../All Routines/RoutineEdit'; \r\nimport '../All Routines/RoutineIndex.css'; \r\nimport Favorites from '../All Routines/Favorites'; \r\n\r\ntype RoutineIndexProps = {\r\n    currentUser: () => void, \r\n    wb: any, \r\n    getRoutines: () => void, \r\n    sessionToken: any, \r\n    adminCheck: boolean\r\n}\r\n\r\ntype RoutineIndexState = {\r\n    modal: boolean, \r\n    isCurrentUser: boolean, \r\n    routineId: number\r\n}\r\n\r\nclass RoutineIndex extends Component <RoutineIndexProps, RoutineIndexState>{\r\n\r\n    constructor(props: RoutineIndexProps) {\r\n        super(props) \r\n        this.state = {\r\n            modal: false, \r\n            isCurrentUser: false, \r\n            routineId: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.userCurrent() \r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({modal: !this.state.modal})\r\n    }\r\n\r\n    deleteRoutine = async () => {\r\n        const url = `http://localhost:3000/routine/delete/${this.props.wb.id}`\r\n        await fetch (url, {\r\n            method: 'DELETE', \r\n            headers: {\r\n                'Authorization': this.props.sessionToken\r\n            }\r\n        })       \r\n        .then(r => r.json())\r\n        .then(rObj => console.log(rObj))\r\n        this.props.getRoutines()\r\n    }\r\n    \r\n    userCurrent = () => {\r\n        if (this.props.wb.userId == localStorage.getItem('userId')) {\r\n            this.setState({isCurrentUser: true}) \r\n        } else {\r\n            this.setState({isCurrentUser: false})\r\n        }\r\n    }\r\n\r\n\r\n    adminRoutineDelete = async () => {\r\n        if (this.props.adminCheck === true) {\r\n            const url = `http://localhost:3000/routine/adminRoutineDelete/${this.props.wb.id}`\r\n            await fetch(url, {\r\n            method: 'DELETE', \r\n            headers: {\r\n                'Authorization': this.props.sessionToken\r\n            }\r\n        }\r\n        )\r\n        .then(r => r.json())\r\n        .then(rObj => console.log(rObj))\r\n        this.props.getRoutines();\r\n    } \r\n    }\r\n\r\n\r\n    render () {\r\n            return (\r\n            <Container className=\"routineContainer\" onMouseOver={() => {\r\n                this.setState({routineId: this.props.wb.id})\r\n                console.log(this.state.routineId)\r\n            }}>\r\n                <Row className=\"cardRow\">\r\n                    <Card className=\"routineCard\" >\r\n                        <CardBody className=\"cardBody\">\r\n                            <p className=\"exercise\"> {this.props.wb.exercise} </p>\r\n                            <p className=\"equipment\"> Equipment : {this.props.wb.equipment} </p>\r\n                            <p className=\"weight\"> Weight : {this.props.wb.weight} lbs </p> \r\n                            <p className=\"sets\"> {this.props.wb.sets} sets </p> \r\n                            <p className=\"reps\"> {this.props.wb.reps} reps </p>\r\n                            <p className=\"duration\"> {this.props.wb.duration} minute routine </p>\r\n                            <p>\r\n                            { this.props.adminCheck === true ? \r\n                            <Button type=\"button\" id=\"adminButton\" onClick={this.adminRoutineDelete}>\r\n                                Delete Routine\r\n                            </Button> : null \r\n                            }\r\n                            </p>\r\n                            <p></p>\r\n                            <p className=\"comments\"> \r\n                                <Favorites wb={this.props.wb} isCurrentUser={this.state.isCurrentUser} currentUser={this.props.currentUser} sessionToken={this.props.sessionToken} routineId={this.state.routineId} getRoutines={this.props.getRoutines}/> \r\n                            </p>\r\n                        </CardBody>\r\n                        <Modal isOpen={this.state.modal} >\r\n                            <RoutineEdit toggle={this.toggle} sessionToken={this.props.sessionToken} wb={this.props.wb} getRoutines={this.props.getRoutines} currentUser={this.props.currentUser}/> \r\n                        </Modal>\r\n                    </Card>\r\n                </Row>\r\n                <Row className=\"buttonRow\">\r\n                    { this.state.isCurrentUser ? \r\n                        <>\r\n                        <Button type=\"button\" className=\"deleteroutineButton\" onClick={this.deleteRoutine}> Delete Routine         </Button>\r\n                        <Button type=\"button\" className=\"editroutineButton\" onClick={this.toggle}> Edit Routine </Button>\r\n                        </> : null // added the empty html tags within the ternary b/c it will only return one thing within the ternary \r\n                    }\r\n                    {\r\n                        !this.state.isCurrentUser ? \r\n                        <div id=\"emptyDiv\">\r\n\r\n                        </div> : null\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoutineIndex; ","C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\RoutineEdit.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\CreateRoutine.tsx",[],"C:\\ElevenFiftyProjects\\Red Badge\\workoutbuddyclient\\src\\components\\All Routines\\Routines.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":54,"column":34,"nodeType":"61","messageId":"62","endLine":54,"endColumn":36},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]